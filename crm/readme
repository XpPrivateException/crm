crm项目

               //日历控件
				$(".time").datetimepicker({
					minView: "month",
					language:  'zh-CN',
					format: 'yyyy-mm-dd',
					autoclose: true,
					todayBtn: true,
					pickerPosition: "top-left"
				});

				//自动补全
					$("#create-customerName").typeahead({
                			source: function (query, process) {
                				$.post(
                					"workbench/transaction/getCustomerName.do",
                					{ "name" : query },
                					function (data) {
                						//alert(data);
                						process(data);
                					},
                					"json"
                				);
                			},
                			delay: 1500
                		});

搭建环境：mybatis-config.xml；根目录文件夹；前端模型；
        utils工具类；MVC分层架构；mapper映射
----------------------------用户模块------------------------------------
1、登录
    (1)用户表tbl_user
    (2)验证账号密码、继续验证失效时间、锁定状态、允许访问的IP地址
    (3)均通过，说明合法，允许登录
    (4)某项不合法，则抛出异常，在密码下方span动态局部刷新提示信息

2、过滤器：字符编码、恶意登录

----------------------------市场活动模块------------------------------------

3、市场活动表：tbl_activity，tbl_activity_remark
    (1)修改jsp，创建工作台包结构、主配置文件
    (2)当点击创建，弹出市场活动的模态窗口：所有者需要从数据库获取，并默认选择登录的用户
    (3)开始日期和结束日期，需要日历控件
    (4)新增市场活动，通过ajax新增市场活动，新增完成后，清空并关闭模态窗口

4、市场活动页面
    (1)分页查询所有的市场活动的方法：pageList（pageNo、pageSize）
    (2)进入页面、创建、修改、删除、查询、点击分页组件，需要触发pageList
    (3)分页查询——动态sql语句：名称、所有者、开始日期、结束日期动态

5、页面控件
    (1)分页插件——pagination
    (2)复选框问题：切换页码后的状态
    (3)当所有市场活动选中，复选框选中

6、市场活动的删除
    (1)获取所有选中的市场活动的id
    (2)拼接请求参数，发送给后端
    (3)事务：删除市场关联的备注，再删除市场活动，提交事务，返回boolean

7、市场活动的修改
    (1)选择市场活动后，点击修改：打开模态窗口，同时通过ajax从数据库读取信息填充到表单项中
    (2)点击更新，通过ajax向后台发送数据，更改该id的activity项
    (3)设置分页状态的动态——时间控件

8、市场活动详情页
    (1)点击名称，跳转详情页面
    (2)市场活动的删除、更新操作
    (3)在页面加载完后，加载这个市场活动关联的备注，显示在备注div中，并更改备注的编辑和删除样式
    (4)点击备注的删除，发送id，删除备注；并全局刷新页面
    (5)添加市场活动的备注，点击保存，发送ajax请求，关联activityId
    (6)修改备注：点击打开模态窗口、保存发送ajax请求

------------------------------核心业务模块------------------------------------
9、导入相关表：
    (1)线索模块相关
        tbl_clue线索表
        tbl_clue_remark线索备注表
        tbl_clue_activity_relation线索与市场活动关系表
    (2)客户模块
        tbl_customer客户表
        tbl_customer_remark客户备注表
    (3)联系人模块
        tbl_contacts联系人表
        tbl_contacts_remark联系人备注表
        tbl_contacts_activity_relation联系人与市场活动关系表
    (4)交易摸块
        tbl_tran交易表
        tbl_tran_remark交易备注表
        tbl_tran_history交易历史表
    (5)数据字典
        tbl_dic_type字典类型表
        tbl_dic_value字典值表

10、搭建环境：
    (1)修改html为jsp，解决404
    (2)搭建“线索”、“客户”、“联系人”、“交易”相关后端结构(domain,dao,service,controller)
    (3)解析crm中的多对多关系

11、用cache缓存机制——解决数据字典存储问题
    缓存：内存中的数据——将数据保存到服务器中，
        如application(全局作用域)，在服务器启动阶段，将数据保存到服务器缓存中
        只要服务器开启，就能一直获得数据，application.setAttribute()
    数据字典：在应用程序中，做表单元素选择内容用的相关数据
        普遍应用于下拉框的选项，当浏览器加载时，使用监听器listener
        在application被创建时，从数据库读取
        tbl_dic_type字典类型表.tbl_dic_value字典值表，
        以类型为key存储到Map集合中，存放到application域

12、线索模块
    (1)点击创建按钮，从数据库获取所有者信息，从数据字典获取下拉框选项
    (2)保存线索——发送ajax请求，保存成功后关闭模态窗口
    (3)分页查询——动态sql语句：名称、公司、公司座机、线索来源、所有者、手机、线索状态

13、线索与市场活动的关联
    (1)当点击线索的名称时，从数据库中读取该线索的数据填充到detail.jsp
    (2)当detail.jsp加载完成时，从数据库中读取该线索关联的所有市场活动信息——四表连接
    (3)当解除关联时，删除关系表中对应的id行
    (4)当点击关联时，打开模态窗口，可以通过关键字模糊查询市场活动
    (5)回车搜索，模态窗口中敲击回车时，会强行刷新页面
    (6)点击关联时，获取选中的市场活动id，在关系表中新增关系
    (7)关联成功后，整理并关闭模态窗口，刷新数据

14、线索转换
    (1)convert.jsp页面动态获取内容
    (2)日历控件、下拉框数据字典、放大镜点击弹出模态窗口
    (3)当点击提交，将市场活动的信息填充到页面
    (4)当点击转换线索，发送传统请求到后端，并回到线索页面：
        1)不用同时创建交易，只需要将线索转换为客户，需要线索的id
        2)需要同时创建交易，需要交易的表单信息——金额、预计成交日期、交易名称、阶段、市场活动id
        3)如果需要创建交易，则需要多个表中新增数据
    (5)转换实现步骤
        1) 获取到线索id，通过线索id获取线索对象（线索对象当中封装了线索的信息）
        2) 通过线索对象提取客户信息，当该客户不存在的时候，新建客户
          （根据公司的名称精确匹配，判断该客户是否存在！）
        3) 通过线索对象提取联系人信息，保存联系人
        4) 线索备注转换到客户备注以及联系人备注
        5) “线索和市场活动”的关系转换到“联系人和市场活动”的关系
        6) 如果有创建交易需求，创建一条交易
        7) 如果创建了交易，则创建一条该交易下的交易历史
        8) 删除线索备注
        9) 删除线索和市场活动的关系
        10) 删除线索

15、交易模块
    (1)点击创建按钮，跳转到添加页，同时填充所有者等后端数据
    (2)客户名称的自动补全，键盘事件模糊查询，bs_typeahead插件使用
    (3)可能性：根据阶段的选择动态输出，使用properties属性文件来保存key=value()
    (4)将properties解析存储到application中，需要多处使用

16、交易表处理
    (1)增加交易，同时可能需要创建客户
    (2)点击交易信息，跳转细节页，动态输出信息
    (3)处理交易的内容信息，市场活动表、联系人表、用户表、客户表之间的连接
    (4)处理细节页的交易历史列表，在页面加载完成后加载
    (5)动态输出阶段span内容
        1)准备阶段List集合，可能性Map集合，及交易失败的分界点
        2)判断当前处于阶段，根据当前阶段动态设置图标的样式
        3)点击阶段图标，发送ajax修改交易和交易历史
        4)根据接收到的数据，处理图标的样式

17、统计图表
    1)根据交易表中不同的阶段数量进行统计，形成漏斗图
    2)将统计出来的阶段数量，按照阶段进行分组。从多到少排列
    3)使用Echarts插件，进行统计图表设计
